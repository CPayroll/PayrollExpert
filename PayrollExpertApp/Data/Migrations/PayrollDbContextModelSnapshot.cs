// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PayrollExpertApp.Data;
using System;

namespace PayrollExpertApp.Data.Migrations
{
    [DbContext(typeof(PayrollDbContext))]
    partial class PayrollDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PayrollExpertApp.Data.AccountingSetup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("AccountingSetup");
                });

            modelBuilder.Entity("PayrollExpertApp.Data.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(70);

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(70);

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(70);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<int>("CompanyId");

                    b.Property<string>("Country")
                        .HasMaxLength(10);

                    b.Property<int>("PersonId");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(15);

                    b.Property<string>("Province")
                        .HasMaxLength(10);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PersonId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("PayrollExpertApp.Data.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CBABusinessNumber")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<string>("Directors")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<bool>("MailingAddressSameAsHeadOfficeAddress");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("OperatingName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("RegistrationDate");

                    b.Property<string>("SigningOfficer")
                        .HasMaxLength(100);

                    b.Property<string>("WebsiteURL")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("PayrollExpertApp.Data.DropdownListItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Text")
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .HasMaxLength(50);

                    b.Property<string>("Value")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DropdownList");
                });

            modelBuilder.Entity("PayrollExpertApp.Data.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Comment")
                        .HasMaxLength(500);

                    b.Property<int?>("CompanyId");

                    b.Property<bool>("ContractCopied");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.Property<int>("PayrollType");

                    b.Property<int>("RemittanceType");

                    b.Property<string>("SIN")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("PayrollExpertApp.Data.ShareHolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("CommonSharePercentage");

                    b.Property<int>("CompanyId");

                    b.Property<string>("Name");

                    b.Property<double>("OtherPercentage");

                    b.Property<double>("PreferredSharePercentage");

                    b.Property<string>("SINNumber");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("ShareHolder");
                });

            modelBuilder.Entity("PayrollExpertApp.Data.Address", b =>
                {
                    b.HasOne("PayrollExpertApp.Data.Company", "Company")
                        .WithMany("Addresses")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PayrollExpertApp.Data.Person", "Person")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PayrollExpertApp.Data.Person", b =>
                {
                    b.HasOne("PayrollExpertApp.Data.Company")
                        .WithMany("ContactPeople")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("PayrollExpertApp.Data.ShareHolder", b =>
                {
                    b.HasOne("PayrollExpertApp.Data.Company", "Company")
                        .WithMany("ShareHolders")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
